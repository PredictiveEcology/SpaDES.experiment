# Generated by roxygen2: do not edit by hand

S3method(as.data.table,simLists)
export(POM)
export(experiment)
export(experiment2)
export(simInitAndExperiment)
exportClasses(simLists)
exportMethods(experiment)
exportMethods(initialize)
exportMethods(show)
import(methods)
importClassesFrom(SpaDES.core,simList)
importFrom(DEoptim,DEoptim)
importFrom(DEoptim,DEoptim.control)
importFrom(SpaDES.core,"outputPath<-")
importFrom(SpaDES.core,"outputs<-")
importFrom(SpaDES.core,"params<-")
importFrom(SpaDES.core,"paths<-")
importFrom(SpaDES.core,.fileExtensions)
importFrom(SpaDES.core,.paths)
importFrom(SpaDES.core,P)
importFrom(SpaDES.core,depends)
importFrom(SpaDES.core,end)
importFrom(SpaDES.core,envir)
importFrom(SpaDES.core,outputPath)
importFrom(SpaDES.core,outputs)
importFrom(SpaDES.core,packages)
importFrom(SpaDES.core,paddedFloatToChar)
importFrom(SpaDES.core,paths)
importFrom(SpaDES.core,rndstr)
importFrom(SpaDES.core,simInit)
importFrom(SpaDES.core,spades)
importFrom(SpaDES.core,times)
importFrom(data.table,":=")
importFrom(data.table,as.data.table)
importFrom(data.table,data.table)
importFrom(data.table,is.data.table)
importFrom(data.table,rbindlist)
importFrom(data.table,set)
importFrom(data.table,setDT)
importFrom(data.table,setkeyv)
importFrom(data.table,setnames)
importFrom(future,plan)
importFrom(future.apply,future_lapply)
importFrom(future.apply,future_mapply)
importFrom(googledrive,drive_auth)
importFrom(magrittr,"%>%")
importFrom(parallel,clusterApplyLB)
importFrom(parallel,clusterEvalQ)
importFrom(parallel,clusterExport)
importFrom(parallel,clusterSetRNGStream)
importFrom(parallel,detectCores)
importFrom(parallel,makeCluster)
importFrom(parallel,stopCluster)
importFrom(purrr,transpose)
importFrom(raster,getCluster)
importFrom(raster,getValues)
importFrom(raster,returnCluster)
importFrom(reproducible,.grepSysCalls)
importFrom(reproducible,Cache)
importFrom(reproducible,Copy)
importFrom(reproducible,checkPath)
importFrom(stats,na.omit)
importFrom(stats,optim)
importFrom(tools,file_ext)
importFrom(utils,capture.output)
importFrom(utils,getFromNamespace)
importFrom(utils,ls.str)
importFrom(utils,tail)
